{"version":3,"sources":["client.js","styles/images/vegetables.png","components/Posts.js","components/AddPost.js","components/menue.js","App.js","reportWebVitals.js","index.js"],"names":["client","contentful","space","process","accessToken","require","Posts","props","useState","visible","setVisible","favorite","setFavorite","posts","map","obj","useEffect","favoriteSelection","id","newFavorites","createClient","key","a","getSpace","then","getEnvironment","environment","getEntry","toString","entry","unpublish","console","log","sys","catch","error","cb","newArray","splice","element","className","src","fields","image","file","url","vegies","onClick","newVisible","Growbig","name","description","ingredients2","preparation4","color","style","cursor","Unpublish","AddPost","text","setText","handleChange","e","preventDefault","target","value","RName","setRName","RDescription","setRDescription","RIngredients2","setRIngredients2","RRreparation4","setRPreparation4","addCategory","setAddCategory","addclient","XContentfulContentType","type","onChange","document","getElementById","defaultValue","rows","cols","arr","focus","createEntryWithId","uuidv4","category","publish","List","item","Menu","windowDimension","setWindowDimension","mNavClosed","window","innerWidth","handleResize","addEventListener","removeEventListener","size","cb2","href","class","App","articles","setArticles","status","setStatus","filtered","setFiltered","filteredArticles","setFilteredArticles","loadEntries","getEntries","response","items","resultFiltered","filter","index","result","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.037487fe.chunk.js","sourcesContent":["import * as contentful from 'contentful'\r\n\r\nexport const client = contentful.createClient({\r\n    space: process.env.REACT_APP_SPACE_ID,\r\n    accessToken: process.env.REACT_APP_ACCESS_TOKEN\r\n})","export default __webpack_public_path__ + \"static/media/vegetables.663a1a43.png\";","import React, { useContext, useState, useEffect} from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport '../styles/post.css';\r\nimport { client } from '../client';\r\nimport { FaUtensils, FaMinusCircle } from \"react-icons/fa\";\r\nimport vegies from \"../styles/images/vegetables.png\"\r\n\r\nconst contentful = require('contentful-management')\r\n\r\n\r\nexport default function Posts(props) {\r\n    //const desponseHtml = marked(description);\r\n\r\n    const[visible, setVisible] = useState([]);\r\n    const [favorite, setFavorite] = useState([]);\r\n\r\n\r\n    props.posts.map(obj=> ({ ...obj, favorite: 'false' }))\r\n   \r\n\r\n    const Growbig = (id) => {\r\n      setVisible([])\r\n      const newVisible = [... visible];\r\n      newVisible[id] = ! newVisible[id];\r\n        setVisible([...newVisible]);\r\n    }\r\n\r\n    useEffect(() => favoriteSelection(), [])\r\n\r\n    const favoriteSelection = (id) => { \r\n        const newFavorites = [...favorite];\r\n      newFavorites[id] = ! newFavorites[id];\r\n       setFavorite([...newFavorites]);\r\n\r\n    };\r\n\r\n    const client = contentful.createClient({\r\n        accessToken: 'CFPAT-cevXEVat_mA6Rr5j6Fvv5KVqeATbc99Gee87egSdsgU'\r\n      })\r\n\r\n        async function Unpublish(id, key) {\r\n    await client.getSpace('gt4lfw53kejq')\r\n    .then((space) => space.getEnvironment('master'))\r\n    .then((environment) => environment.getEntry(id.toString()))\r\n    .then((entry) => entry.unpublish())\r\n    .then((entry) => console.log(`Entry ${entry.sys.id} unpublished.`))\r\n    .catch(console.error);\r\n    props.cb(id);\r\n    const newArray = favorite;\r\n    newArray.splice(key,1);\r\n    setFavorite(newArray);\r\n      }\r\n      \r\n\r\n    return (\r\n\r\n        <>\r\n        {\r\n        props.posts.map((element, id) => (\r\n            // {setVisible([...visible, false])}\r\n            <div className={visible[id]? \"post postBig\" : \"post\" } key={id} >\r\n\r\n                <img src={element?.fields?.image?.fields?.file?.url? element?.fields?.image?.fields?.file?.url: vegies} key={id} className=\"recipeImage\" onClick={() => Growbig(id)}/>\r\n\r\n                <h2>{element?.fields?.name}</h2>\r\n                <div className={visible[id]? \"\" : \"hidden\" }>\r\n                <p>{element?.fields?.description}</p>\r\n               \r\n                <h3>Ingredients:</h3>\r\n                <ul className=\"ingredients\">\r\n                {\r\n                element?.fields?.ingredients2?.map((element,id) => (\r\n                      <li key={id}>{element}</li>\r\n                ))}\r\n                </ul>\r\n                <h3>Preparation:</h3>\r\n                <ol className=\"preparation\">\r\n                {\r\n                element?.fields?.preparation4?.map((element,id) => (\r\n                      <li key={id}>{element}</li>\r\n                ))}\r\n                </ol></div>\r\n                <FaUtensils className='FaUtensils'\r\n        color={favorite[id] ? \"rgb(226, 121, 0)\" : \"lightgrey\"}\r\n        onClick={() => favoriteSelection(id)}\r\n        style={{ cursor: \"pointer\" }}\r\n      />\r\n        <FaMinusCircle className='FaMinusCircle'\r\n        onClick ={() => Unpublish(element?.sys?.id, id)}\r\n        />\r\n            </div>\r\n        )\r\n        )}\r\n        </>\r\n        )\r\n\r\n    }","import React from 'react';\r\nimport { client } from '../client';\r\nimport { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport '../styles/addPost.css';\r\n\r\nexport default function AddPost() {\r\n\r\n    const [text, setText] = useState();\r\n\r\n\r\n    \r\n     const handleChange = (e) =>{\r\n\r\n        e.preventDefault()\r\n        console.log(e.target.value)\r\n        setText(e.target.value)\r\n    }\r\n\r\n    const [RName, setRName] = useState('');\r\n    const [RDescription, setRDescription] = useState('');\r\n    const [RIngredients2, setRIngredients2] = useState([]);\r\n    const [RRreparation4, setRPreparation4] = useState([]);\r\n\r\n    const [addPost, setAddPost] = useState(\r\n        {\r\n            'name': '',\r\n            'description': '',\r\n            'ingredients2': [],\r\n            'preparation4': []\r\n        }\r\n    );\r\n    //console.log('this is addPost name',addPost.name)\r\n    // console.log('this is addPost description',addPost.description)\r\n\r\n    function setName() {\r\n        setRName(text);\r\n        document.getElementById('nameInput').value = '';\r\n        // console.log('from setName',RName);\r\n    }\r\n\r\n    function setDescription() {\r\n        setRDescription(text);\r\n        document.getElementById('descriptionInput').value = '';\r\n        // console.log('from setDescription ',RDescription)\r\n    }\r\n\r\n    // useEffect(() => setIngredients(), []);\r\n    function setIngredients() {\r\n        setRIngredients2(arr => [...arr, `${text}`]);\r\n        document.getElementById('ingredientInput').value = '';\r\n        document.getElementById(\"ingredientInput\").focus();\r\n        // console.log('from setIngredients',RIngredients2)\r\n    }\r\n\r\n    function setPreparation() {\r\n        setRPreparation4(arr => [...arr, `${text}`]);\r\n        document.getElementById('preparationInput').value = '';\r\n        document.getElementById(\"preparationInput\").focus();\r\n        // console.log('from setPreparation',RRreparation4)\r\n    }\r\n\r\n    const [addCategory, setAddCategory] = useState('Snack');\r\n    function handleCategory(e) {\r\n        setAddCategory(e.target.value);\r\n        console.log(addCategory);\r\n    }\r\n\r\n\r\n    const contentful = require('contentful-management')\r\n\r\n\r\n    const addclient = contentful.createClient({\r\n        accessToken: 'CFPAT-cevXEVat_mA6Rr5j6Fvv5KVqeATbc99Gee87egSdsgU',\r\n        XContentfulContentType: 'Recipes'\r\n    })\r\n\r\n\r\n\r\n    function handleClick() {\r\n        //console.log('aray data:', addRecipie.ingredients)\r\n\r\n        addclient.getSpace('gt4lfw53kejq')\r\n            .then((space) => space.getEnvironment('master'))\r\n            .then((environment) => environment.createEntryWithId('recipes', uuidv4(), {\r\n                fields:\r\n                {\r\n                    name: { 'en-US': RName },\r\n                    category: { 'en-US': addCategory },\r\n                    description: { 'en-US': RDescription },\r\n                    ingredients2: { 'en-US': RIngredients2 },\r\n                    preparation4: { 'en-US': RRreparation4 }\r\n                }\r\n            })).then((entry) => entry.publish()).then((entry) => console.log(entry))\r\n            .then(() => {\r\n                setRName('');\r\n                setRDescription('');\r\n                setRIngredients2([]);\r\n                setRPreparation4([]);\r\n            })\r\n            .catch(console.error)\r\n\r\n\r\n        //   updateImageUrl();\r\n    }\r\n\r\n    return (\r\n        <div id=\"form\"><h2 id=\"sBigger\">Add New Recipe</h2>\r\n\r\n            <div className=\"forFlexing\">\r\n                <div className='inputForum'>\r\n\r\n                    <div className='inputF'>Through this form you can add new recipes. Please enter the required data and click on the add button for each field, and when finished click on the “Add Recipe” button</div>\r\n                    <div className='inputF'>\r\n                        <label>Recipe Name: </label>\r\n                        <input id='nameInput' type=\"text\" onChange={handleChange}></input>\r\n                        <button onClick={setName}>add Recipe name</button>\r\n                    </div>\r\n                    <div className='inputF'>\r\n                    <label>Choose Category: </label>\r\n                        <select\r\n                            defaultValue={addCategory}\r\n                            onChange={handleCategory}\r\n                            className= 'inputF'\r\n                        >\r\n                            <option value=\"Breakfast\">Breakfast</option>\r\n                            <option value=\"Lunch\">Lunch</option>\r\n                            <option value=\"Dinner\">Dinner</option>\r\n                            <option value=\"Snack\">Snack</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='inputF'>\r\n                        <label>Description: </label>\r\n                        <textarea id='descriptionInput' name=\"message\" rows=\"10\" cols=\"30\" onChange={handleChange}></textarea>\r\n                        <button onClick={setDescription}>add Description</button>\r\n                    </div>\r\n                    <div className='inputF'>\r\n                        <label>Ingredients: </label>\r\n                        <input id='ingredientInput' type=\"text\" onChange={handleChange}></input>\r\n                        <button onClick={setIngredients}>add one</button>\r\n                        <div id='ingShow'></div>\r\n                    </div>\r\n                    <div className='inputF'>\r\n                        <label>Preparation: </label>\r\n                        <input id='preparationInput' type=\"text\" onChange={handleChange}></input>\r\n                        <button onClick={setPreparation}>add one</button>\r\n                    </div>\r\n                    <div>\r\n                        <button className='addRecipeBtn' onClick={handleClick}>Add Recipe</button>\r\n                    </div>\r\n                </div>\r\n                <div className='Preview'>\r\n                    <h3>Preview</h3>\r\n                    <div className=\"preview\">\r\n                        <p>{RName}</p>\r\n                        <p>{addCategory}</p>\r\n                        <p>{RDescription}</p>\r\n                        <ul>{List(RIngredients2)}</ul>\r\n                        <ol>{List(RRreparation4)}</ol>\r\n                    </div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const List = (props) => {\r\n//     const newArray = props.map(giveitout)\r\n//     function giveitout(props) {\r\n//         return <li>{props}</li>\r\n//     }\r\n//     return newArray\r\n\r\n//         <div className=\"forFlexing\">\r\n//         <div className='inputForum'>\r\n            \r\n//             <div className='inputF'>Through this form you can add new recipes. Please enter the required data and click on the add button for each field, and when finished click on the “Add Recipe” button</div>\r\n//             <div className='inputF'>\r\n//             <label>Recipe Name: </label>\r\n            \r\n//             <input id='nameInput' type=\"text\" onChange={handleChange}></input>\r\n//             <button onClick={setName}>add</button>\r\n            \r\n//             </div>\r\n//             <div className='inputF'>\r\n//             <label>Description: </label>\r\n//             <textarea id='descriptionInput' name=\"message\" rows=\"10\" cols=\"30\" onChange={handleChange}></textarea>\r\n//             <button onClick={setDescription}>add</button>\r\n//             </div>\r\n//             <div className='inputF'>\r\n//             <label>Ingredients: </label>\r\n//             <input id='ingredientInput' type=\"text\" onChange={handleChange}></input>\r\n//             <button onClick={setIngredients}>add one</button>\r\n//             </div>\r\n//             <div className='inputF'>\r\n//             <label>Preparation: </label>\r\n//             <input id='preparationInput' type=\"text\" onChange={handleChange}></input>\r\n//             <button onClick={setPreparation}>add one</button>\r\n//             </div>\r\n            \r\n//         </div>\r\n//         <div className='Preview'>\r\n//             <h3>Preview</h3>\r\n//             <div className=\"preview\">\r\n//                 <h2>{RName}</h2>\r\n//                 <h5 className=\"prevHead\">Description</h5>\r\n//                 <p>{RDescription}</p>\r\n//                 <h5 className=\"prevHead\">{RIngredients2? \"Ingredients\" : \"\"}</h5>\r\n//                 <ul>{List(RIngredients2)}</ul>\r\n//                 <h5 className=\"prevHead\">{RIngredients2? \"Preparation\" : \"\"}</h5>\r\n//                 <ol>{List(RRreparation4)}</ol>\r\n//                 </div><div>\r\n//             <button className='addRecipeBtn' onClick={handleClick}>Add Recipe</button>\r\n//             </div></div>\r\n//         </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n    \r\n    \r\n//   setProper(!proper);\r\n// console.log(proper) })\r\n\r\n\r\nconst List =(props) =>{\r\n    \r\n    console.log(props   )\r\nreturn props.map((item, id) => (\r\n    <li key={id}>{item}<span className=\"deleteMe\" onClick = { ()=>props.splice(id, 1)}\r\n  \r\n  >   ×</span></li>\r\n))\r\n\r\n\r\n\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport '../styles/menu1.css';\r\nimport { IoIosMenu } from \"react-icons/io\";\r\n\r\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\r\n\r\n\r\n\r\nexport default function Menu(props){\r\n    const [windowDimension, setWindowDimension] = useState(null);\r\n    const [mNavClosed, setNavClosed] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setWindowDimension(window.innerWidth);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimension(window.innerWidth);\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  console.log(windowDimension);\r\n  const handleClick = () =>{\r\n    mNavClosed? setNavClosed(false):setNavClosed(true)\r\n  }\r\n\r\n\r\n\r\n    return(\r\n        <nav>\r\n           <div> <IoIosMenu size =\"70\" color =\"rgb(226, 121, 0)\" className=\"mobile\" onClick=\"handleClick\"/></div>\r\n        <menu className= {mNavClosed? \"noned\": \"blocked\"}>\r\n                <li onClick ={() => props.cb2()}>Home</li>\r\n                <li onClick ={() => props.cb('Breakfast')}>Breakfast</li>\r\n                <li onClick ={() => props.cb('Lunch')}>Lunch</li>\r\n                <li onClick ={() => props.cb('Dinner')}>Dinner</li>\r\n                <li onClick ={() => props.cb('Snack')}>Snacks</li>            \r\n                <li><AnchorLink href='#form'>New Recipe</AnchorLink></li>\r\n            \r\n            \r\n            \r\n  \r\n            </menu>\r\n  <div class=\"ribbon left\"></div>\r\n  <div class=\"ribbon right\"></div>\r\n</nav>\r\n    )\r\n}","import './App.css';\r\nimport React from 'react';\r\nimport { client } from './client';\r\nimport { useState, useEffect } from 'react';\r\nimport Posts from './components/Posts'\r\nimport AddPost from './components/AddPost';\r\nimport Menu from './components/menue';\r\n\r\nfunction App() {\r\n  const [articles, setArticles] = useState([]);\r\n  const [status, setStatus] = useState(false);\r\n  const [filtered, setFiltered] = useState(false);\r\n  const [filteredArticles, setFilteredArticles] = useState([]);\r\n\r\n  function changeStatus(index) {\r\n    const newstatus = !status;\r\n    setStatus(newstatus);\r\n    console.log(status);\r\n    const result = articles.filter( articles => articles.sys.id !== index)\r\n    setArticles(result);\r\n  }\r\n\r\n  useEffect(() => loadEntries(), [status])\r\n\r\n  const loadEntries = async () => {\r\n    const response = await client.getEntries();\r\n    console.log(response.items);\r\n    setArticles(response.items);\r\n  }\r\n\r\n  function filterFunction(category) {\r\n    //const newstatus = !status;\r\n    //setStatus(newstatus);\r\n    console.log(category);\r\n    const resultFiltered = articles.filter( articles => articles.fields.category === category)\r\n    setFilteredArticles(resultFiltered);\r\n    setFiltered(true);\r\n  }\r\n\r\n  function unfilterFunction() {\r\n    setFiltered(false);\r\n  }\r\n\r\n  /* async function Connect() { //to connect with contentful\r\n\r\n  // update an item in a Recipe\r\n  const contentful = require('contentful-management')\r\n\r\n  async function Connect(){ //to connect with contentful\r\n\r\n    let client = await contentful.createClient({\r\n      accessToken: 'CFPAT-cevXEVat_mA6Rr5j6Fvv5KVqeATbc99Gee87egSdsgU' //this key came from: Settings=> API keys=> Content management tokens (tab) =>  \"Generate personal token\" button.\r\n    })\r\n    let space = await client.getSpace('gt4lfw53kejq'); //this is the \"Space ID\". from Settings=> API keys=> Content delivery / preview tokens (tab).\r\n    console.log(space)\r\n    return await space.getEnvironment('master'); //\"master\" is the defualt enviroment.\r\n  }\r\n\r\n  async function updateRecipe(env, recipeID) { //to update an item in Recipe.\r\n    let item = await env.getEntry(recipeID) //this will save the recipe as object in the variable.\r\n    //console.log(item.fields.name['en-US'])\r\n    item.fields.name['en-US'] = 'Insalata Caprese';\r\n    //item.fields.name: in this case the name field will be changed to the new value between quotes.\r\n    //'en-US': is a key\r\n    await item.update(); //this will update the field in Contentful, but not published yet.\r\n    item = await env.getEntry(recipeID); //to fetch the last item status from Contentful before publishing.\r\n    await item.publish(); // to publish the changes.\r\n  }\r\n\r\n\r\n  \r\n  (async () => { //to fire the functions inside\r\n    let env = await Connect(); //By running this function, accessToken, Space ID, master, will be saved in env.\r\n    await updateRecipe(env, '5VYaJdA8FsLTO3PWJyaYHj') //pass the \"env\" and recipeID to updateRecipe\r\n \r\n  })(); */\r\n  // or if you already have a fetched environment\r\n\r\n  /* new_entry = environment.entries().create(\r\n      'new_entry_id',\r\n      entry_attributes\r\n  ) */\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className='container'>\r\n        <header>\r\n          <div className=\"wrapper\"><h6>- It Tastes Awesome! - </h6> -</div>\r\n          <Menu cb={filterFunction} cb2={unfilterFunction}/>\r\n        </header>\r\n        <main>\r\n          <div className=\"wrapper\">\r\n\r\n            <Posts posts={filtered ? filteredArticles : articles} cb={changeStatus}/>\r\n            <AddPost />\r\n\r\n          </div>\r\n          \r\n        </main>\r\n          \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}